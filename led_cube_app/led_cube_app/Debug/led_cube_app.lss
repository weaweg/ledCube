
led_cube_app.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         0000006c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  000000fe  2**0
                  ALLOC, LOAD, DATA
  2 .comment      0000002f  00000000  00000000  000000fe  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000020  00000000  00000000  0000012d  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000870  00000000  00000000  0000014d  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000005c4  00000000  00000000  000009bd  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000228  00000000  00000000  00000f81  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000024  00000000  00000000  000011ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    000001af  00000000  00000000  000011d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    00000048  00000000  00000000  0000137f  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000010  00000000  00000000  000013c7  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .text         00000004  000000a6  000000a6  000000fa  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 12 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000013d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .text.main    0000003a  0000006c  0000006c  000000c0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   8:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
   c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  10:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  14:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  18:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  1c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  20:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  24:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  28:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  2c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  30:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  34:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  38:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  3c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  40:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  44:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  48:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  4c:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>
  50:	0c 94 53 00 	jmp	0xa6	; 0xa6 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <_etext>
  64:	0c 94 34 00 	jmp	0x68	; 0x68 <_exit>

00000068 <_exit>:
  68:	f8 94       	cli

0000006a <__stop_program>:
  6a:	ff cf       	rjmp	.-2      	; 0x6a <__stop_program>

Disassembly of section .text:

000000a6 <__bad_interrupt>:
  a6:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.main:

0000006c <main>:
#include "main.h"
#include <util/delay.h>

int main(void)
{
	DDRA = 0xFF;
  6c:	8f ef       	ldi	r24, 0xFF	; 255
  6e:	8a bb       	out	0x1a, r24	; 26
	DDRD = 0b01000000;
  70:	80 e4       	ldi	r24, 0x40	; 64
  72:	81 bb       	out	0x11, r24	; 17
	
    while(1)
    {
		DATA_PORT = 0xFF;
  74:	8f ef       	ldi	r24, 0xFF	; 255
  76:	8b bb       	out	0x1b, r24	; 27
		PORTD = 0b01000000;
  78:	80 e4       	ldi	r24, 0x40	; 64
  7a:	82 bb       	out	0x12, r24	; 18
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  7c:	2f e3       	ldi	r18, 0x3F	; 63
  7e:	8d e0       	ldi	r24, 0x0D	; 13
  80:	93 e0       	ldi	r25, 0x03	; 3
  82:	21 50       	subi	r18, 0x01	; 1
  84:	80 40       	sbci	r24, 0x00	; 0
  86:	90 40       	sbci	r25, 0x00	; 0
  88:	e1 f7       	brne	.-8      	; 0x82 <main+0x16>
  8a:	00 c0       	rjmp	.+0      	; 0x8c <main+0x20>
  8c:	00 00       	nop
		_delay_ms(1000);
		DATA_PORT = 0x00;
  8e:	1b ba       	out	0x1b, r1	; 27
		PORTD = 0b00000000;
  90:	12 ba       	out	0x12, r1	; 18
  92:	2f e3       	ldi	r18, 0x3F	; 63
  94:	8d e0       	ldi	r24, 0x0D	; 13
  96:	93 e0       	ldi	r25, 0x03	; 3
  98:	21 50       	subi	r18, 0x01	; 1
  9a:	80 40       	sbci	r24, 0x00	; 0
  9c:	90 40       	sbci	r25, 0x00	; 0
  9e:	e1 f7       	brne	.-8      	; 0x98 <main+0x2c>
  a0:	00 c0       	rjmp	.+0      	; 0xa2 <main+0x36>
  a2:	00 00       	nop
  a4:	e7 cf       	rjmp	.-50     	; 0x74 <main+0x8>
